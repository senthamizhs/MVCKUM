@{
    string fileversion = System.Configuration.ConfigurationManager.AppSettings["UpdateVersion"] != null ? System.Configuration.ConfigurationManager.AppSettings["UpdateVersion"].ToString() : "";
    string allowlogincountry = System.Configuration.ConfigurationManager.AppSettings["Logincountry"] != null ? System.Configuration.ConfigurationManager.AppSettings["Logincountry"].ToString() : "";
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head id="Head1">
    <meta charset="utf-8" />
    <link rel="shortcut icon" href="Images/favicon.ico" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="HandheldFriendly" content="True" />
    <meta name="MobileOptimized" content="320" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewBag.Title</title>

    <link href="~/Content/CSS/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/CSS/TME3/Login_RUAE.css?@fileversion" rel="stylesheet" />
    <link href="~/Content/CSS/Component.css?@fileversion" rel="stylesheet" />
    <link href="~/Content/CSS/font-awesome.css" rel="stylesheet" />

    @Styles.Render("~/Content/CommonAllCSS")
    <script src="~/js/CommonJS/jquery-1.11.1.js"></script>
    @Scripts.Render("~/bundles/CommonAllJS")
    <script src="~/js/download.js?@fileversion"></script>

    <script src="~/js/jquery.blockUI.js?@fileversion"></script>
</head>
@{
    string _Cntry = System.Configuration.ConfigurationManager.AppSettings["COUNTRY"] != null ? System.Configuration.ConfigurationManager.AppSettings["COUNTRY"].ToString() : "";
    string _product = System.Configuration.ConfigurationManager.AppSettings["Producttype"] != null ? System.Configuration.ConfigurationManager.AppSettings["Producttype"].ToString() : "";
    string Apptheme = System.Configuration.ConfigurationManager.AppSettings["apptheme"].ToUpper().ToString();
    string Product = System.Configuration.ConfigurationManager.AppSettings["Producttype"].ToString();
    string Contactno = "Contact Us : " + System.Configuration.ConfigurationManager.AppSettings["Callcenterno"].ToString();
    string EmailId = "Mail Us: " + System.Configuration.ConfigurationManager.AppSettings["Supportmail"].ToString();
    string terminal_app = System.Configuration.ConfigurationManager.AppSettings["TerminalType"] != null ? System.Configuration.ConfigurationManager.AppSettings["TerminalType"].ToString() : "";
}
<body class="login" id="RUAE">
    <div class="login-header">
        <div class="container">
            <div class="row row0">
                <div class="col-sm-2 col-md-3 mrg-rt-8">
                    <img src="@Url.Content("~/Images/TME3/RiyaLogo.png")" />
                </div>
                <div class="col-sm-5 col-md-4 tit-hd">
                    <span>Welcome to Riya Travel UAE..</span>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="login-bdy">
            <div class="row">
                <div class="col-sm-6 col-sm-offset-3 col0 bg-clr radius col-xs-12 col-md-4 col-md-offset-4 brdr-clr">
                    <div class="logincnt">
                        <div class="login-tit">
                            <span>Riya Login</span>
                        </div>
                    </div>
                    <div class="dv-anim input-effect animationdivuser">
                        <input type="text" class="txt-anim clshideErr" name="username" autocomplete="off" maxlength="25" onkeypress="return ValidateSpecialChar(event);" style="padding: 0px 0px; width: 100%; box-shadow: none !important; text-transform: uppercase" id="txt_id">
                        <label>Terminal&nbsp;Id</label>
                        <span class="focus-border">
                            <i id="iusernamevalidation" class="validationcls"></i>
                        </span>
                        <em class="errhide" id="errortrm"></em>
                    </div>
                    <div class="dv-anim input-effect animationdivuser">
                        <input type="text" class="txt-anim clshideErr" name="username" autocomplete="off" maxlength="25" onkeypress="return ValidateSpecialChar(event);" style="padding: 0px 0px; width: 100%; box-shadow: none !important;" id="txt_usrnm">
                        <label>Username &nbsp;</label>
                        <span class="focus-border">
                            <i id="iusernamevalidation" class="validationcls"></i>
                        </span>

                        <em class="errhide" id="errorusn"></em>
                    </div>
                    <div class="dv-anim input-effect animationdivuser">
                        <input type="password" class="txt-anim clshideErr" name="username" autocomplete="off" maxlength="25" onkeypress="return ValidateSpecialChar(event);" style="padding: 0px 0px; width: 100%; box-shadow: none !important;" id="txt_passwd"/>
                        <label>Password</label>
                        <span class="focus-border">
                            <i id="iusernamevalidation1" class="validationcls"></i>
                        </span>
                        <span class="spneye" onclick="ShowHidePassword('txt_passwd')"><i class="fa fa-eye"></i></span>
                        <em class="errhide" id="errorpws"></em>
                    </div>



                    <div class="row" style="width: 88%; margin: 0px auto; float: none;">
                        <div class="col-sm-6 col-xs-6 col10 mr-tp15">
                            <button id="get_login" class="loginbtn btnRays btnRays-1 btnRays-1e">Log In <i id="iLoading" class="fa fa-spinner fa-spin" style="font-size: 16px; color: #292929; display: none;"></i></button>
                        </div>
                        <div class="col-sm-6 col-xs-6 col10 mr-tp15">
                            <button id="get_clear" class="loginbtn btnRays btnRays-1 btnRays-1e">Clear</button>
                        </div>
                        <div class="copyright">
                            <p style="">© 2018 Riya. All Rights Reserved</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="message_wrap col-md-4 col-sm-offset-3 col-md-offset-4 col0 bg-clr">
            <p class="message">
                <span id="empty-destination-box" style="height: 25px; padding-top: 5px;" class="error">All field(s) should not be empty.</span>
            </p>
        </div>

    </div>

    <input type="hidden" id="hdn_product" value="@Product" />
    <input type="hidden" id="hdn_apptheme" value="@Apptheme" />
    <input type="hidden" id="hdnterminal_app" value="@terminal_app" />
</body>

<script>
    var BrowserDetails = "";
    var geolocation = "";
    var allowlogincountry = '@allowlogincountry';
    window.onload = window.history.forward(0);

    VesionCheck();
    function VesionCheck() {
        var a = navigator.userAgent;
        var userAgent = navigator.userAgent.toLowerCase(),
                     browser = '',
                     version = 0;
        if (/MSIE (\d+\.\d+);/.test(navigator.userAgent)) { //test for MSIE x.x;
            var ieversion = new Number(RegExp.$1) // capture x.x portion and store as a number
            if (ieversion < 9) {
                window.location = "@Url.Content("~/Redirect/Redirect")";
                return false;
            }
        }

        // Is this a version of Chrome?
        if ($.browser.chrome) {
            userAgent = userAgent.substring(userAgent.indexOf('chrome/') + 7);
            userAgent = userAgent.substring(0, userAgent.indexOf('.'));
            version = userAgent;
            // If it is chrome then jQuery thinks it's safari so we have to tell it it isn't
            $.browser.safari = false;
            browser = "Chrome";
            if (version.split('.')[0] < 18) {
                window.location.href = "@Url.Content("~/Redirect/Redirect")";

                    }
                }
        // Is this a version of Safari?
                if ($.browser.safari) {
                    userAgent = userAgent.substring(userAgent.indexOf('version/') + 8);
                    userAgent = userAgent.substring(0, userAgent.indexOf('.'));
                    version = userAgent;
                    browser = "Safari";
                    if (version.split('.')[0] < 5) {
                        window.location.href = "@Url.Content("~/Redirect/Redirect")";

                    }
                }

        // Is this a version of Opera?
                if ($.browser.opera) {
                    userAgent = userAgent.substring(userAgent.indexOf('version/') + 8);
                    userAgent = userAgent.substring(0, userAgent.indexOf('.'));
                    version = userAgent;
                    browser = "Opera";
                    if (version.split('.')[0] < 11) {
                        window.location.href = "@Url.Content("~/Redirect/Redirect")";
                    }
                }

        // Is this a version of Mozilla?
                if ($.browser.mozilla) {
                    //Is it Firefox?
                    if (navigator.userAgent.toLowerCase().indexOf('firefox') != -1) {
                        userAgent = userAgent.substring(userAgent.indexOf('firefox/') + 8);
                        userAgent = userAgent.substring(0, userAgent.indexOf('.'));
                        version = userAgent;
                        browser = "Firefox"
                    }
                        // If not then it must be another Mozilla
                    else {
                        browser = "Mozilla"
                    }

                    if (version == 0) {

                    }
                    else {

                        if (version.split('.')[0] < 12) {
                            window.location.href = "@Url.Content("~/Redirect/Redirect")";
                        }
                    }

                }
            }

            $(document).ready(function () {
                var terminal_id = localStorage.getItem("agnterminalid");
                if (terminal_id != null && terminal_id != "") {
                    document.getElementById("txt_id").value = terminal_id.trim();
                    $('#txt_id').addClass('has-content');
                }
                $(".input-effect input").focusout(function () {
                    if ($(this).val().trim() != "") {
                        $(this).addClass("has-content");
                    } else {
                        $(this).removeClass("has-content");
                    }
                })

                $(".input-effect textarea").focusout(function () {
                    if ($(this).val().trim() != "") {
                        $(this).addClass("has-content");
                    } else {
                        $(this).removeClass("has-content");
                    }
                })

                Geolocationlog();
                BrowserDetails = BrowserDet();
                BrowserDetails = JSON.parse(BrowserDetails);

                //LoadAgn();
                //if (sessionStorage.getItem('logoutinsertflg') != null && sessionStorage.getItem('logoutinsertflg') == "" && document.referrer.indexOf('SessionExp') != -1) {
                //    sessionStorage.setItem('logoutinsertflg', "Y");
                //}
                if (sessionStorage.getItem('logoutinsertflg') != null && sessionStorage.getItem('logoutinsertflg') == "Y") {
                    sessionStorage.setItem('logoutinsertflg', "");
                    sessionStorage.removeItem('chcktouchpointlog');
                    var param = {
                        termID: localStorage.getItem("agnterminalid"),
                        agnID: localStorage.getItem("agnagentid")
                    };
                    $.ajax({
                        type: "POST", 		//GET or POST or PUT or DELETE verb
                        url: '@Url.Action("Logout", "Login")',// Location of the service
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(param),
                        dataType: "json",
                        success: function (json) {//On Successful service call
                            if (json.Status == "01") {
                                console.log("Logout Succeded.");
                            }
                            else {
                                console.log(json.Message != "" ? json.Message : "Problem occured while insert logout details. (#03).");
                            }
                            //Do Stuff when we need...
                        },
                        error: function (e) {//On Successful service call
                            console.log("Internal Problem occured while insert logout details. (#07).");
                            //Do Sutff when we need...
                        }	// When Service call fails
                    });
                }

                if (document.getElementById('txt_usrnm').innerHTML != null && document.getElementById('txt_usrnm').innerHTML != "") {
                    $("#txt_usrnm").val(cookie_username);
                    $("#txt_usrnm").addClass("has-content");
                }
                if (document.getElementById('txt_passwd').innerHTML != null && document.getElementById('txt_passwd').innerHTML != "") {
                    $("#txt_passwd").val(cookie_password);
                    $("#txt_passwd").addClass("has-content");
                }
            });


            function BrowserDet() { // by vijai 17042018
                (function (window) {
                    {
                        var unknown = '-';

                        // screen
                        var screenSize = '';
                        if (screen.width) {
                            width = (screen.width) ? screen.width : '';
                            height = (screen.height) ? screen.height : '';
                            screenSize += '' + width + " x " + height;
                        }

                        // browser
                        var nVer = navigator.appVersion;
                        var nAgt = navigator.userAgent;
                        var browser = navigator.appName;
                        var version = '' + parseFloat(navigator.appVersion);
                        var majorVersion = parseInt(navigator.appVersion, 10);
                        var nameOffset, verOffset, ix;

                        // Opera
                        if ((verOffset = nAgt.indexOf('Opera')) != -1) {
                            browser = 'Opera';
                            version = nAgt.substring(verOffset + 6);
                            if ((verOffset = nAgt.indexOf('Version')) != -1) {
                                version = nAgt.substring(verOffset + 8);
                            }
                        }
                        // Opera Next
                        if ((verOffset = nAgt.indexOf('OPR')) != -1) {
                            browser = 'Opera';
                            version = nAgt.substring(verOffset + 4);
                        }
                            // Edge
                        else if ((verOffset = nAgt.indexOf('Edge')) != -1) {
                            browser = 'Microsoft Edge';
                            version = nAgt.substring(verOffset + 5);
                        }
                            // MSIE
                        else if ((verOffset = nAgt.indexOf('MSIE')) != -1) {
                            browser = 'Internet Explorer';
                            version = nAgt.substring(verOffset + 5);
                        }
                            // Chrome
                        else if ((verOffset = nAgt.indexOf('Chrome')) != -1) {
                            browser = 'Chrome';
                            version = nAgt.substring(verOffset + 7);
                        }
                            // Safari
                        else if ((verOffset = nAgt.indexOf('Safari')) != -1) {
                            browser = 'Safari';
                            version = nAgt.substring(verOffset + 7);
                            if ((verOffset = nAgt.indexOf('Version')) != -1) {
                                version = nAgt.substring(verOffset + 8);
                            }
                        }
                            // Firefox
                        else if ((verOffset = nAgt.indexOf('Firefox')) != -1) {
                            browser = 'Firefox';
                            version = nAgt.substring(verOffset + 8);
                        }
                            // MSIE 11+
                        else if (nAgt.indexOf('Trident/') != -1) {
                            browser = 'Internet Explorer';
                            version = nAgt.substring(nAgt.indexOf('rv:') + 3);
                        }
                            // Other browsers
                        else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {
                            browser = nAgt.substring(nameOffset, verOffset);
                            version = nAgt.substring(verOffset + 1);
                            if (browser.toLowerCase() == browser.toUpperCase()) {
                                browser = navigator.appName;
                            }
                        }
                        // trim the version string
                        if ((ix = version.indexOf(';')) != -1) version = version.substring(0, ix);
                        if ((ix = version.indexOf(' ')) != -1) version = version.substring(0, ix);
                        if ((ix = version.indexOf(')')) != -1) version = version.substring(0, ix);

                        majorVersion = parseInt('' + version, 10);
                        if (isNaN(majorVersion)) {
                            version = '' + parseFloat(navigator.appVersion);
                            majorVersion = parseInt(navigator.appVersion, 10);
                        }

                        // mobile version
                        var mobile = /Mobile|mini|Fennec|Android|iP(ad|od|hone)/.test(nVer);

                        // cookie
                        var cookieEnabled = (navigator.cookieEnabled) ? true : false;

                        if (typeof navigator.cookieEnabled == 'undefined' && !cookieEnabled) {
                            document.cookie = 'testcookie';
                            cookieEnabled = (document.cookie.indexOf('testcookie') != -1) ? true : false;
                        }

                        // system
                        var os = unknown;
                        var clientStrings = [
                            { s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ },
                            { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ },
                            { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ },
                            { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ },
                            { s: 'Windows Vista', r: /Windows NT 6.0/ },
                            { s: 'Windows Server 2003', r: /Windows NT 5.2/ },
                            { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ },
                            { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ },
                            { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ },
                            { s: 'Windows 98', r: /(Windows 98|Win98)/ },
                            { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ },
                            { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ },
                            { s: 'Windows CE', r: /Windows CE/ },
                            { s: 'Windows 3.11', r: /Win16/ },
                            { s: 'Android', r: /Android/ },
                            { s: 'Open BSD', r: /OpenBSD/ },
                            { s: 'Sun OS', r: /SunOS/ },
                            { s: 'Linux', r: /(Linux|X11)/ },
                            { s: 'iOS', r: /(iPhone|iPad|iPod)/ },
                            { s: 'Mac OS X', r: /Mac OS X/ },
                            { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },
                            { s: 'QNX', r: /QNX/ },
                            { s: 'UNIX', r: /UNIX/ },
                            { s: 'BeOS', r: /BeOS/ },
                            { s: 'OS/2', r: /OS\/2/ },
                            { s: 'Search Bot', r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/ }
                        ];
                        for (var id in clientStrings) {
                            var cs = clientStrings[id];
                            if (cs.r.test(nAgt)) {
                                os = cs.s;
                                break;
                            }
                        }

                        var osVersion = unknown;

                        if (/Windows/.test(os)) {
                            osVersion = /Windows (.*)/.exec(os)[1];
                            os = 'Windows';
                        }

                        switch (os) {
                            case 'Mac OS X':
                                osVersion = /Mac OS X (10[\.\_\d]+)/.exec(nAgt)[1];
                                break;

                            case 'Android':
                                osVersion = /Android ([\.\_\d]+)/.exec(nAgt)[1];
                                break;

                            case 'iOS':
                                osVersion = /OS (\d+)_(\d+)_?(\d+)?/.exec(nVer);
                                osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);
                                break;
                        }

                        // flash (you'll need to include swfobject)
                        /* script src="//ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js" */
                        var flashVersion = 'no check';
                        if (typeof swfobject != 'undefined') {
                            var fv = swfobject.getFlashPlayerVersion();
                            if (fv.major > 0) {
                                flashVersion = fv.major + '.' + fv.minor + ' r' + fv.release;
                            }
                            else {
                                flashVersion = unknown;
                            }
                        }
                    }

                    window.jscd = {
                        browser: browser,
                        browserVersion: version,
                        browserMajorVersion: majorVersion,
                        mobile: mobile,
                        os: os,
                        osVersion: osVersion,
                        screen: screenSize,
                        cookies: cookieEnabled,
                        flashVersion: flashVersion,
                        Online: navigator.onLine,
                        FullUserAgent: navigator.userAgent
                    };
                }(this));

                return JSON.stringify(jscd);
            }

            function Geolocationlog() {

                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    url: 'https://ipapi.co/json',
            data: "{}",
            timeout: 10000,
            dataType: "json",
            success: function (locdata) {
                geolocation = locdata;
            },
            error: function (result) {
                AnotherGeolocationlog();
            }
        });
    }

    function AnotherGeolocationlog() {

        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '@Url.Content("https://ipinfo.io/")',
            data: "{}",
            timeout: 10000,
            dataType: "json",
            success: function (locdata) {
                geolocation = locdata;
            },
            error: function (result) {

            }
        });
    }


    $("#get_login").click(function () {
        console.log("Login_Submit_Request: " + new Date());
        CheckLogin();
    });
    function CheckLogin() {
        var TerminalId,
        Username,
        Password = "";
        if (CheckVal()) {
            document.getElementById("get_login").disabled = true;
            $('#iLoading').show();

            TerminalId = $("#txt_id").val() != null ? $("#txt_id").val().toUpperCase().trim() : "";
            Username = $("#txt_usrnm").val() != null ? $("#txt_usrnm").val().trim() : "";
            Password = $("#txt_passwd").val() != null ? $("#txt_passwd").val().trim() : "";


            //cookie.set('cookie_terminal', TerminalId);
            //cookie.set('cookie_username', Username);
            //cookie.set('cookie_password_id', Password);
            var logincountry = "";

            if (allowlogincountry == "" || logincountry.toString().indexOf(allowlogincountry) > -1) {
                var LoginParam = { tr_id: TerminalId, NAME: Username, PWD: Password, Environment: "W" }; //W-Web, M-Mobile, mobstu-Only used for Mobile...

                try {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("Loginsubmit", "Login")",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(LoginParam),
                        timeout: 180000,
                        dataType: "json",
                        success: function (data) {
                            console.log("Login_Submit_Response_time: " + new Date());
                            document.getElementById("get_login").disabled = false;
                            $('#iLoading').hide();

                            if (data.Status == "00") {
                                if (data.Message != "") {
                                    showError(data.Message);
                                    asyncafterLogin("FAILED", TerminalId, Username, Password, data.Message);

                                }
                                else {
                                    showError("Unable to login (#07).");
                                    asyncafterLogin("FAILED", TerminalId, Username, Password, "Unable to login");
                                }
                                // console.log("Login_Submit_Response: " + new Date());
                            }
                            else if (data.Status == "01") {
                                localStorage.setItem("agnterminalid", TerminalId);
                                localStorage.setItem("agnagentid", data.Result);
                                TerminalId = TerminalId.trim();
                                asyncafterLogin("SUCCESS", TerminalId, Username, Password, "");
                                if (data.agenttyp == "DL") {
                                    window.location.href = "@Url.Action("Dashboard", "CntrlPanel")";
                                }
                                else {
                                    if ($("#hdn_apptheme")[0].value == "THEME1" && $("#hdn_product").val() != "DNC") {
                                        window.location.href = "@Url.Action("HomeMaster", "Home")";
                                            }
                                            else if ($("#hdn_apptheme")[0].value == "THEME3" && $("#hdn_product").val() != "DNC") {
                                                window.location.href = "@Url.Action("HomeMaster", "Home")";
                                            }
                                            else {
                                                window.location.href = "@Url.Action("Homeflight", "Home")";
                                            }
                                    }

                                    return false;
                                }
                                else if (data.Status == "02") {
                                    asyncafterLogin("SUCCESS", TerminalId, Username, Password, "");
                                    ShowAggrement(data.Datee, data.AgnNm);
                                    return false;
                                }
                                else {
                                    asyncafterLogin("FAILED", TerminalId, Username, Password, "Unable to login");
                                    showError("Problem occured while login (#07).");
                                }
                        },
                        error: function (e) {
                            asyncafterLogin("FAILED", TerminalId, Username, Password, "Unable to login");
                            document.getElementById("get_login").disabled = false;
                            $('#iLoading').hide();

                            showError("Unable to login (#09).");
                        }
                    });
                } catch (e) {
                    asyncafterLogin("FAILED", TerminalId, Username, Password, "Unable to login");
                    document.getElementById("get_login").disabled = false;
                    $('#iLoading').hide();
                    showError("Unable to login (#11).");
                }
            }
            else {
                asyncafterLogin("FAILED", TerminalId, Username, Password, "Unable to login");
                showError("Login restricted please contact support team.");
            }
        }
    }
    function asyncafterLogin(loginstatus, TerminalId, Username, Password, Remarks) {
        var inputdata = {
            CLIENT_ID: TerminalId,
            USERNAME: Username,
            PASSWORD: Password,
            PLATFORM: BrowserDetails.mobile == true ? "Mobile - " : "Web - ",
            STATUS: loginstatus,
            BROWSER: BrowserDetails.browser + " - " + BrowserDetails.browserVersion,
            IP: geolocation.ip,
            ISP: geolocation.org,
            LATITUDE: geolocation.latitude,
            LONGITUDE: geolocation.longitude,
            CITY: geolocation.city,
            COUNTRY: geolocation.country_name,
            STATE: geolocation.region,
            REMARKS: Remarks
        }

        $.ajax({
            type: "POST", 		//GET or POST or PUT or DELETE verb
            url: '@Url.Action("Commonlog", "Login")',// Location of the service
            data: JSON.stringify(inputdata),
            timeout: 200000,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: true,
            success: function (json) {//On Successful service call
                var result = json.Result[0];
                $.unblockUI();
            },
            error: function (e) {// When Service call fails                           
                //LogDetails(e.responseText, e.status, "AfterBooking");
                $.unblockUI();
            }

        });
    }

    function CheckVal() {
        var terminalidvalidation_msg, usernamevalidation_msg, passwordvalidation_msg = "";

        if ($("#hdnterminal_app").val() != "T") {
            if ($("#txt_id").val() == null || $("#txt_id").val().trim() == "") {
                showErrorValidation("Please enter the terminal id.", "errortrm");
                document.getElementById("txt_id").focus();
                return false;
            }

            else if ($("#txt_usrnm").val() == null || $("#txt_usrnm").val().trim() == "") {

                showErrorValidation("Please enter the user name.", "errorusn");
                document.getElementById("txt_usrnm").focus();
                return false;
            }
            else if ($("#txt_passwd").val() == null || $("#txt_passwd").val().trim() == "") {

                showErrorValidation("Please enter the password.", "errorpws");

                document.getElementById("txt_passwd").focus();
                return false;
            }
            else {
                hideError();
            }
            return true;
        }
        else {
            if ($("#txt_usrnm").val() == null || $("#txt_usrnm").val().trim() == "") {

                showErrorValidation("Please enter the user name.", "errorusn");
                document.getElementById("txt_usrnm").focus();
                return false;
            }
            else if ($("#txt_passwd").val() == null || $("#txt_passwd").val().trim() == "") {

                showErrorValidation("Please enter the password.", "errorpws");

                document.getElementById("txt_passwd").focus();
                return false;
            }
            else {
                hideError();
            }
            return true;
        }
    }

    $("#get_clear").click(function () {
        $("#txt_id").val("");
        $("#txt_usrnm").val("");
        $("#txt_passwd").val("");


        $("#txt_id").removeClass("has-content");
        $("#txt_usrnm").removeClass("has-content");
        $("#txt_passwd").removeClass("has-content");

        hideError();
    });
    var samperror = "";
    $('.clshideErr').keyup(function () {
        //hideError();
        hideErrorValidation();
    });


    function showError(msg) {
        $(".message").addClass("animation");
        $("#empty-destination-box").addClass("error_active");
        //  $(".loginpanel").addClass("has_error");

        setTimeout(function () {
            $(".message").removeClass("animation");
        }, 200);
        $("#empty-destination-box").html(msg);
    }
    function hideError(temp1, temp2) {
        $(".message").removeClass("animation");
        $("#empty-destination-box").removeClass("error_active");
        $(".loginpanel").removeClass("has_error");
    }
    function showErrorValidation(msg, Lid) {
        samperror = Lid;

        $("#" + Lid).addClass("error_active");
        $("#" + Lid).html(msg);
        $("#" + Lid).css("display", "block");
    }
    function hideErrorValidation(temp1, temp2) {
        $(".message").removeClass("animation");
        $("#empty-destination-box").removeClass("error_active");
        $(".loginpanel").removeClass("has_error");
        //$("#" + samperror).removeClass("error_active");
        $("#" + samperror).css("display", "none");

    }

    var input = document.getElementById("txt_passwd");
    input.addEventListener("keyup", function (event) {
        event.preventDefault();
        if (event.keyCode === 13) {
            document.getElementById("get_login").click();
        }
    });
</script>

</html>
