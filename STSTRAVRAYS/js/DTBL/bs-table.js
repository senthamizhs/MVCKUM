!function (e) { "use strict"; var t, r, a = {}, n = function (t) { var a = !0, n = !0; if (e.each(t.values, function (e, t) { n && parseInt(t) != t && (n = !1), a && parseFloat(t) != t && (a = !1) }), n || a) return { type: "range" }; if (r) { var i = r.indexOf("?") < 0 ? "?" : "&"; return { type: "search", source: r + i + "resourceFor=" + t.field } } return { type: "select" } }, i = function (t, r, a) { var i = {}; return e.each(t, function (e, t) { t.filterable && (i[t.field] = { field: t.field, label: t.title, values: [] }) }), e.each(r, function (t, r) { e.each(i, function (e, t) { i[e].values.indexOf(r[e]) < 0 && i[e].values.push(r[e]) }) }), e.each(i, function (t, r) { i[t] = e.extend(i[t], n(r)) }), i }, o = function (r, n) { var i, o = !0; return e.each(r, function (e, r) { i = !1; try { i = t.getFilterType(e), filter = t.getFilter(e), void 0 !== filter.values && (r = filter.values.indexOf(r)), i && void 0 !== a[e] && (o = o && t.checkFilterTypeValue(i, a[e], r)) } catch (e) { } }), o }; e.fn.bootstrapTableFilter.externals.push(function () { if (this.options.connectTo) { t = this; var n = e(this.options.connectTo), l = n.bootstrapTable("getData"), s = n.bootstrapTable("getColumns"); r = n.bootstrapTable("getServerUrl"); var c = this.options.filters.length ? [] : i(s, l); e.each(c, function (e, r) { t.addFilter(r) }), r ? this.$el.on("submit.bs.table.filter", function () { a = t.getData(); var e = r.indexOf("?") < 0 ? "?" : "&", i = r + e + "filter=" + encodeURIComponent(JSON.stringify(a)); n.bootstrapTable("refresh", { url: i }) }) : (n.bootstrapTable("registerSearchCallback", o), this.$el.on("submit.bs.table.filter", function () { a = t.getData(), n.bootstrapTable("updateSearch") })) } }) }(jQuery);